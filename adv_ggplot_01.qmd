---
title: "Advanced visualization with ggplot2"
subtitle: "Challenge 1"
author: "Rylan Mueller"
format: 
  html:
    self-contained: true
---

# Instructions

**Task:** Using `ggplot2` and other tools in R, recreate the original New York Times graphic to the greatest extent possible. Try to get as close as possible to the figure below:

![](https://lmyint.github.io/212_spring_2024/images/hw1_goal.png){width=600, fig-align="center"}

You will need to use reference pages and documentation to discover necessary tools. For example, you may want to Google search "ggplot multiple plots". When looking through results, check publication dates and use newer references.

**Requirements for passing:**

- Temperature graph
    - Bands for the record, normal, and actual highs and lows are shown in the correct colors.
    - Downward triangles point to the record high temperatures above the red band.
    - Text displays the record high temperatures above the triangles.
    - X-axis label: 3-letter month abbreviations appear in the middle of each month.
    - Y-axis label: Tick marks at 0, 40, 80, and 120 only.
    - Vertical lines separate the months.
    - Title of "Temperature" is included.
- Precipitation
    - Tan area and blue line reflecting the monthly cumulative precipitation is included.
    - Text (number) for cumulative precipitation for each month is included at the end of each month just above the blue line.
    - Downward triangles point to the record precipitation days.
    - Vertical lines separate the months.
    - Title of "Precipitation" is included.
- Overall
    - Both the temperature and precipitation graphs are in one figure.
    - The temperature plot takes up more vertical space than the precipitation plot.
    - The title "SFO weather in 2011" is present.

**Extra:** If you'd like further practice, recreate the legend in the temperature graph that shows how the colored lines relate to record, normal, and actual highs.

**Submission:** Click the "Render" button in RStudio to knit a self-contained HTML with all images embedded. Commit and push changes to this file as well as the generated HTML. Push your changes to GitHub by midnight on Monday 1/29. (GitHub classroom automatically creates a pull request for receiving feedback.)



# Setup

```{r}
library(tidyverse)
library(grid)
library(gridExtra)

weather <- read_csv("https://lmyint.github.io/212_spring_2024/data/sfo_weather.csv")
```



# Visualization

```{r}
month_starts <- weather %>% 
  filter(Day == 1, Month != 1) %>% 
  mutate(dayBefore = dateInYear - 1)

all_months <- weather %>% 
  filter(Day == 15)
  #pull(dateInYear)

record_temp <- weather %>% 
  filter(Record == "TRUE")

record_precip <- weather %>% 
  filter(RecordP == "TRUE")

start_month <- month_starts %>% 
  pull(dayBefore)

end_month <- weather %>%  
  filter(dateInYear %in% c(31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365))
```


```{r}
temp_graph <- ggplot(weather, aes(x = dateInYear)) +
  geom_linerange(aes(ymin=RecordLow, ymax = RecordHigh), color = "#ECEBE3", linewidth=1.5) +
  geom_linerange(aes(ymin = NormalLow, ymax = NormalHigh), color = "#C8B8BA", linewidth=1.5) +
  geom_linerange(aes(ymin = Low, ymax = High), color = "#A90248", linewidth=1.5) + 
  geom_vline(data = month_starts, mapping = aes(xintercept = dateInYear), linetype = "dashed", alpha = 0.1) + 
  labs(title = "Temperature", y = "", x = "") + 
  geom_point(data = record_temp, shape = 25, aes(x = dateInYear, y = High + 2), fill = "black", color =  "black")+ 
  annotate("text", x = record_temp$dateInYear, y = record_temp$High + 15, label = record_temp$RecordText, size = 2) + 
  scale_y_continuous(limits = c(0,115), breaks = c(0, 40, 80, 120)) +
  scale_x_continuous(breaks = c(all_months$dateInYear), labels = month.abb, expand = c(0,0)) + 
  theme_classic()
temp_graph
```

```{r}
precip_graph <- ggplot(weather, aes(x = dateInYear)) + 
  geom_area(data = weather, aes(y = CulmPrec, group = Month), color = "#32a3d8", fill = "#EBEAE2") + 
  geom_vline(data = month_starts, mapping = aes(xintercept = dateInYear), color = "#CDCDCD", alpha = 0.5) + 
  labs(title = "Precipitation", y = "", x = "") + 
  geom_point(data = record_precip, shape = 25, aes(x = dateInYear, y = CulmPrec), fill = "black", color =  "black")+
  annotate("text", x = end_month$dateInYear, y = end_month$CulmPrec + 0.1, label = end_month$CulmPrec, size = 3) + 
  scale_x_continuous(limits = c(0, 365), breaks = NULL, expand = c(0,0)) + 
  scale_y_continuous(limits = c(0,8), breaks = c(4,8)) +
  theme_classic() + 
  theme(axis.line.x = element_blank())
precip_graph
```

```{r, fig.width = 15}
grid.arrange(temp_graph, precip_graph, nrow = 2, heights = c(3,1), top = "SFO Weather in 2011")
```


# AI usage

If you use an AI tool (e.g., ChatGPT, Google Bard) to help with this assignment, please paste below the prompts you use and their associated output.

**Prompt:**

**Output:**

Keep in mind that the use of AI has a [huge energy cost](https://lmyint.github.io/212_spring_2024/syllabus.html#artificial-intelligence-ai-use). Please describe an energy-saving activity that you can start engaging in to offset this cost.

**Energy-saving activity:** 
